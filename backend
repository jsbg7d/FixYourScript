// server.js
import express from 'express';
import cors from 'cors';
import { Configuration, OpenAIApi } from 'openai';
import dotenv from 'dotenv';

dotenv.config();

const app = express();
const PORT = process.env.PORT || 4000;

app.use(cors());
app.use(express.json({ limit: '1mb' }));

const configuration = new Configuration({
  apiKey: process.env.OPENAI_API_KEY,
});
const openai = new OpenAIApi(configuration);

const fixScriptPrompt = (script, language) => `
You are a senior ${language} engineer. Carefully review the following ${language} script and return a corrected version that:
- Fixes any syntax or logic errors
- Adheres to current best practices
- Is secure, clean, and easy to read
- Includes helpful inline comments

Return only the corrected and annotated script.

Script:
---
${script}
---
`;

app.post('/fix-script', async (req, res) => {
  const { script, language } = req.body;

  if (!script || !language) {
    return res.status(400).json({ error: 'Missing script or language' });
  }

  try {
    const prompt = fixScriptPrompt(script, language);
    const completion = await openai.createChatCompletion({
      model: 'gpt-4',
      messages: [{ role: 'user', content: prompt }],
      temperature: 0,
    });

    const fixedScript = completion.data.choices[0].message.content.trim();
    res.json({ fixedScript });
  } catch (error) {
    console.error('OpenAI API error:', error);
    res.status(500).json({ error: 'Failed to process the script' });
  }
});

app.get('/', (req, res) => {
  res.send('FixMyScript.ai backend is running');
});

app.listen(PORT, () => {
  console.log(`Server running on port ${PORT}`);
});
